#
# xnat-openid-auth-plugin: openid-provider-sample-Google.properties
#
# Copy to $XNAT_HOME/config/auth as 'openid-provider.properties'
# 
#
# Needs to be 'openid'
auth.method=openid
type=openid
provider.id=openid
visible=true
auto.enabled=true
auto.verified=true
# Name displayed in the UI
name=OpenID Authentication Provider
# Toggle username & password login visibility
disableUsernamePasswordLogin=false
# List of providers that appear on the login page, see options below.
enabled=google
# Site URL - the main domain, needed to build the pre-established URL below.
siteUrl=
preEstablishedRedirUri=/openid-login
# Obtained when registering your app in Google
openid.google.clientId=
openid.google.clientSecret=
openid.google.accessTokenUri=https://www.googleapis.com/oauth2/v3/token
openid.google.userAuthUri=https://accounts.google.com/o/oauth2/auth
openid.google.scopes=openid,profile,email
openid.google.link=<p>To sign-in using your Google credentials, please click on the button below.</p><p><a href="/openid-login?providerId=google"> <img src="/images/btn_google_signin_dark_normal_web.png" /> </a></p>
# Flag that sets if we should be checking email domains
openid.google.shouldFilterEmailDomains=false
# Flag to force the user creation process, normally this should be set to false
openid.google.forceUserCreate=true
# Flag to set the enabled property of new users, set to false to allow admins to manually enable users before allowing logins, set to true to allow access right away
openid.google.userAutoEnabled=false
# Flag to set the verified property of new users
openid.google.userAutoVerified=true
# Property names to use when creating users
openid.google.emailProperty=email
openid.google.givenNameProperty=given_name
openid.google.familyNameProperty=family_name